from dotenv import load_dotenv
from os import environ
import sys
import os
from redisstream import RedisStreamConsumer
from redis import Redis
import platform


stream_key = environ.get("STREAM")
service_name = "{project}"
events = environ.get("EVENTS", "PYTHON")
consumer = platform.node()


def connect_to_redis():
    hostname = environ.get("REDIS_HOSTNAME", "localhost")
    port = environ.get("REDIS_PORT", 6379)

    r = Redis(hostname, port, retry_on_timeout=True)
    return r


def callback(conn, id, event, payload, ack):
    print("id: ", id)
    print("Event: ", event)
    print("      --> ", payload)
    ack(id)


def main():
    try:
        print(f"running {project} ...")

        load_dotenv()
        connection = connect_to_redis()
        stream = RedisStreamConsumer(
            connection, stream_key, service_name, events)

        stream.listen(callback, "0")
    except Exception as e:
        print(f"{{e}}")
        sys.exit(0)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print('Application is shuting down!')
        try:
            sys.exit(0)
        except SystemExit:
            os._exit(0)
